%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%% VISUAL CHANGE DETECTION - DATA STRUCTURE ORGANIZER %%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Date Created: July 3rd 2019
% Date Last Edit: July 3rd 2019
% Author: Marissa Evans - mhe229@nyu.edu

% DATA DISCLOSURE: All data presented here is the property of Weiji Ma's
% lab and cannot be duplicated or analyzed without explicit permission.

% Assumptions: 
% Raw data files are in the same directory as the script.
% This script must be run BEFORE the calculation script. 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Script information: This script organizes the preprossed data into structures
% with meaninful variables and sections to be used in analysis. Mainly just
% indexing and organizing of variables. 

% What this code does(by section):

% Section A - Initalization
% Section B - Load raw data
% Section C - Put all data into one structure
% Section D - Add section for 'correct responses' to structure
% Section E - Locate which trials belong to each experimental level
% Section F - Regroup trials from each level and add index to structure
% Section G - Make a new structure to contain the 'correct responses' across
%             all participants for both conditions
% Section H - Make a new matrix to contain the 'proportion respond change' across
%             all participants for both conditions
% Section I - Make a matrix with 3x columns for ALL trials and ALL
%             participants. 1) correct response, 2) ellipse or line, 3)
%             reliability level for that trial
% Section J - Save output structures 


% OUTPUTS: Saves 2x structures with data organized for analysis

%% ABOUT THE DATA

% 'Delta' is the amount of change in radians the ellipse rotated
% 'rel' is the shape of the ellipse (narrow or round) *round ellipse
%       different for each participant
% 'resp' is subject response, 0 = no change, 1 = change

%% A) INITALIZATION BEOFRE STRUCTURE CREATION
clear all %clears the workspace
close all %closes all open figures
clc %clears the command window

totalSubj = 9; %total number of participants 
stimLoc = 4; %total number of stimulus locations during display
numLevel = 5; %total number of reliability levels 
%% B) LOAD PREPROCESSED DATA

%Data has already been put into small structures for each participant
%within each condition. 

S01Ellipse = load('METEST_Ellipse_simple.mat');
S01Line = load('METEST_Line_simple.mat');

S02Ellipse = load('POO_Ellipse_simple.mat');
S02Line = load('POO_Line_simple.mat');

S03Ellipse = load('S02_Ellipse_simple.mat');
S03Line = load('S02_Line_simple.mat');

S04Ellipse = load('S03_Ellipse_simple.mat');
S04Line = load('S03_Line_simple.mat');

S05Ellipse = load('S06_Ellipse_simple.mat');
S05Line = load('S06_Line_simple.mat');

S06Ellipse = load('S08_Ellipse_simple.mat');
S06Line = load('S08_Line_simple.mat');

S07Ellipse = load('S10_Ellipse_simple.mat');
S07Line = load('S10_Line_simple.mat');

S08Ellipse = load('S11_Ellipse_simple.mat');
S08Line = load('S11_Line_simple.mat');

S09Ellipse = load('S14_Ellipse_simple.mat');
S09Line = load('S14_Line_simple.mat');

%% C) PUT ALL DATA INTO ONE STRUCTURE

%This section compiles the data from each subject and each condition into
%one structure for easy saving and opening. 

subjStruct(1).Ellipse = S01Ellipse.data;
subjStruct(1).Line = S01Line.data;
subjStruct(2).Ellipse = S02Ellipse.data;
subjStruct(2).Line = S02Line.data;
subjStruct(3).Ellipse = S03Ellipse.data;
subjStruct(3).Line = S03Line.data;
subjStruct(4).Ellipse = S04Ellipse.data;
subjStruct(4).Line = S04Line.data;
subjStruct(5).Ellipse = S05Ellipse.data;
subjStruct(5).Line = S05Line.data;
subjStruct(6).Ellipse = S06Ellipse.data;
subjStruct(6).Line = S06Line.data;
subjStruct(7).Ellipse = S07Ellipse.data;
subjStruct(7).Line = S07Line.data;
subjStruct(8).Ellipse = S08Ellipse.data;
subjStruct(8).Line = S08Line.data;
subjStruct(9).Ellipse = S09Ellipse.data;
subjStruct(9).Line = S09Line.data;


%% D) FIND CORRECT RESPONSES AND ADD TO STRUCTURE

% This section compares the if the participant responded a change occured
% on a trial to whether a chance actually occured. The new 'correct' matrix
% is added to the structure for each participant. 

for ii = 1:totalSubj
    
    % ELLIPSE TRIALS
    changeAllEllipse(:,ii) = (sum(subjStruct(ii).Ellipse.Delta')~=0);
    subjStruct(ii).Ellipse.Correct = changeAllEllipse(:,ii) == subjStruct(ii).Ellipse.resp;
    
    % LINE TRIALS
    changeAllLine(:,ii) = (sum(subjStruct(ii).Line.Delta')~=0);
    subjStruct(ii).Line.Correct = changeAllLine(:,ii) == subjStruct(ii).Line.resp;
    
end

%% E) FIND THE TRIALS THAT BELONG TO EACH EXPERIMENTAL LEVEL (0,1,2,3,4)

% When the data is first loaded the responses (2000 per participant) are lumped together.
% This section teases apart which responses were for trials at each
% reliability level (0,1,2,3,4)

levelEdgesEllipse = cell(9,2);
levelEdgesLine = cell(9,2);
%column 1 of cell array are the edges of the levels, column 2 is the length
%of each level
for ii = 1:totalSubj
    
    % Find what the low and high relaibility numbers are for each subject
    
    %ELLIPSE TRIALS
    reliabilityEllipse = unique(subjStruct(ii).Ellipse.rel);
    highRelEllipse = reliabilityEllipse(2);
    lowRelEllipse = reliabilityEllipse(1);
    
    % LINE TRIALS
    reliabilityLine = unique(subjStruct(ii).Line.rel);
    highRelLine = reliabilityLine(2);
    lowRelLine = reliabilityLine(1);
    
    for ss = 1:stimLoc
        %find at what trail # the data switches from low to high
        %reliability in each column
        
        %ELLIPSE TRIALS
        levelEdgesEllipse{ii}(:,ss) = find(subjStruct(ii).Ellipse.rel(:,ss) == lowRelEllipse,1, 'last');
        
        %LINE TRIALS
        levelEdgesLine{ii}(:,ss) = find(subjStruct(ii).Line.rel(:,ss) == lowRelLine,1, 'last');
    end
    
end

%% F) REGROUP TRIALS FROM EACH LEVEL AND ADD INDEX TO STRUCTURE

%This section adds a matrix to each partcipant in each condition within the
%structure for each of the five reliability levels. This will exist as an
%index for each participant for which of their trials fall into with level.
%Due to the complete randomization of the task presentation each
%participant recieved a slightly different number of trials at each level. 

for ii = 1:totalSubj
    %ELLIPSE TRIALS
    subjStruct(ii).Ellipse.zeroRel = [1:levelEdgesEllipse{ii,1}(1,4)]';
    subjStruct(ii).Ellipse.oneRel = [levelEdgesEllipse{ii,1}(1,4)+1:levelEdgesEllipse{ii,1}(1,3)]';
    subjStruct(ii).Ellipse.twoRel = [levelEdgesEllipse{ii,1}(1,3)+1:levelEdgesEllipse{ii,1}(1,2)]';
    subjStruct(ii).Ellipse.threeRel = [levelEdgesEllipse{ii,1}(1,2)+1:levelEdgesEllipse{ii,1}(1,1)]';
    subjStruct(ii).Ellipse.fourRel = [levelEdgesEllipse{ii,1}(1,1)+1:length(subjStruct(1).Ellipse.Delta)]';
    
    %LINE TRIALS
    subjStruct(ii).Line.zeroRel = [1:levelEdgesLine{ii,1}(1,4)]';
    subjStruct(ii).Line.oneRel = [levelEdgesLine{ii,1}(1,4)+1:levelEdgesLine{ii,1}(1,3)]';
    subjStruct(ii).Line.twoRel = [levelEdgesLine{ii,1}(1,3)+1:levelEdgesLine{ii,1}(1,2)]';
    subjStruct(ii).Line.threeRel = [levelEdgesLine{ii,1}(1,2)+1:levelEdgesLine{ii,1}(1,1)]';
    subjStruct(ii).Line.fourRel = [levelEdgesLine{ii,1}(1,1)+1:length(subjStruct(1).Line.Delta)]';
end

%% G) MAKE NEW STRUCTURE FOR ALL OUTPUT DATA FOR 'CORRECT RESPONSE' GROUPED
% FOR EVERY EXPERIMENTAL LEVEL (CONCATINATED INTO SINGLE COLUMNS ACROSS
% SUBJECTS)

%This section takes the correct responses for each participant and splits
%them by the relaibility level calculated above. Then all the responses for
%every relaibiltiy level in each condition are put into their own matrix in
%a new structure that groups ACROSS participants. 

% ELLIPSE TRIALS

outputAccrossSubj.Ellipse.Correct.zeroRel =...
    [subjStruct(1).Ellipse.Correct(subjStruct(1).Ellipse.zeroRel,1);...
    subjStruct(2).Ellipse.Correct(subjStruct(2).Ellipse.zeroRel,1);...
    subjStruct(3).Ellipse.Correct(subjStruct(3).Ellipse.zeroRel,1);...
    subjStruct(4).Ellipse.Correct(subjStruct(4).Ellipse.zeroRel,1);...
    subjStruct(5).Ellipse.Correct(subjStruct(5).Ellipse.zeroRel,1);...
    subjStruct(6).Ellipse.Correct(subjStruct(6).Ellipse.zeroRel,1);...
    subjStruct(7).Ellipse.Correct(subjStruct(7).Ellipse.zeroRel,1);...
    subjStruct(8).Ellipse.Correct(subjStruct(8).Ellipse.zeroRel,1);...
    subjStruct(9).Ellipse.Correct(subjStruct(9).Ellipse.zeroRel,1);];

outputAccrossSubj.Ellipse.Correct.oneRel =...
    [subjStruct(1).Ellipse.Correct(subjStruct(1).Ellipse.oneRel,1);...
    subjStruct(2).Ellipse.Correct(subjStruct(2).Ellipse.oneRel,1);...
    subjStruct(3).Ellipse.Correct(subjStruct(3).Ellipse.oneRel,1);...
    subjStruct(4).Ellipse.Correct(subjStruct(4).Ellipse.oneRel,1);...
    subjStruct(5).Ellipse.Correct(subjStruct(5).Ellipse.oneRel,1);...
    subjStruct(6).Ellipse.Correct(subjStruct(6).Ellipse.oneRel,1);...
    subjStruct(7).Ellipse.Correct(subjStruct(7).Ellipse.oneRel,1);...
    subjStruct(8).Ellipse.Correct(subjStruct(8).Ellipse.oneRel,1);...
    subjStruct(9).Ellipse.Correct(subjStruct(9).Ellipse.oneRel,1);];

outputAccrossSubj.Ellipse.Correct.twoRel =...
    [subjStruct(1).Ellipse.Correct(subjStruct(1).Ellipse.twoRel,1);...
    subjStruct(2).Ellipse.Correct(subjStruct(2).Ellipse.twoRel,1);...
    subjStruct(3).Ellipse.Correct(subjStruct(3).Ellipse.twoRel,1);...
    subjStruct(4).Ellipse.Correct(subjStruct(4).Ellipse.twoRel,1);...
    subjStruct(5).Ellipse.Correct(subjStruct(5).Ellipse.twoRel,1);...
    subjStruct(6).Ellipse.Correct(subjStruct(6).Ellipse.twoRel,1);...
    subjStruct(7).Ellipse.Correct(subjStruct(7).Ellipse.twoRel,1);...
    subjStruct(8).Ellipse.Correct(subjStruct(8).Ellipse.twoRel,1);...
    subjStruct(9).Ellipse.Correct(subjStruct(9).Ellipse.twoRel,1);];

outputAccrossSubj.Ellipse.Correct.threeRel =...
    [subjStruct(1).Ellipse.Correct(subjStruct(1).Ellipse.threeRel,1);...
    subjStruct(2).Ellipse.Correct(subjStruct(2).Ellipse.threeRel,1);...
    subjStruct(3).Ellipse.Correct(subjStruct(3).Ellipse.threeRel,1);...
    subjStruct(4).Ellipse.Correct(subjStruct(4).Ellipse.threeRel,1);...
    subjStruct(5).Ellipse.Correct(subjStruct(5).Ellipse.threeRel,1);...
    subjStruct(6).Ellipse.Correct(subjStruct(6).Ellipse.threeRel,1);...
    subjStruct(7).Ellipse.Correct(subjStruct(7).Ellipse.threeRel,1);...
    subjStruct(8).Ellipse.Correct(subjStruct(8).Ellipse.threeRel,1);...
    subjStruct(9).Ellipse.Correct(subjStruct(9).Ellipse.threeRel,1);];

outputAccrossSubj.Ellipse.Correct.fourRel =...
    [subjStruct(1).Ellipse.Correct(subjStruct(1).Ellipse.fourRel,1);...
    subjStruct(2).Ellipse.Correct(subjStruct(2).Ellipse.fourRel,1);...
    subjStruct(3).Ellipse.Correct(subjStruct(3).Ellipse.fourRel,1);...
    subjStruct(4).Ellipse.Correct(subjStruct(4).Ellipse.fourRel,1);...
    subjStruct(5).Ellipse.Correct(subjStruct(5).Ellipse.fourRel,1);...
    subjStruct(6).Ellipse.Correct(subjStruct(6).Ellipse.fourRel,1);...
    subjStruct(7).Ellipse.Correct(subjStruct(7).Ellipse.fourRel,1);...
    subjStruct(8).Ellipse.Correct(subjStruct(8).Ellipse.fourRel,1);...
    subjStruct(9).Ellipse.Correct(subjStruct(9).Ellipse.fourRel,1);];

%LINE TRIALS

outputAccrossSubj.Line.Correct.zeroRel =...
    [subjStruct(1).Line.Correct(subjStruct(1).Line.zeroRel,1);...
    subjStruct(2).Line.Correct(subjStruct(2).Line.zeroRel,1);...
    subjStruct(3).Line.Correct(subjStruct(3).Line.zeroRel,1);...
    subjStruct(4).Line.Correct(subjStruct(4).Line.zeroRel,1);...
    subjStruct(5).Line.Correct(subjStruct(5).Line.zeroRel,1);...
    subjStruct(6).Line.Correct(subjStruct(6).Line.zeroRel,1);...
    subjStruct(7).Line.Correct(subjStruct(7).Line.zeroRel,1);...
    subjStruct(8).Line.Correct(subjStruct(8).Line.zeroRel,1);...
    subjStruct(9).Line.Correct(subjStruct(9).Line.zeroRel,1);];

outputAccrossSubj.Line.Correct.oneRel =...
    [subjStruct(1).Line.Correct(subjStruct(1).Line.oneRel,1);...
    subjStruct(2).Line.Correct(subjStruct(2).Line.oneRel,1);...
    subjStruct(3).Line.Correct(subjStruct(3).Line.oneRel,1);...
    subjStruct(4).Line.Correct(subjStruct(4).Line.oneRel,1);...
    subjStruct(5).Line.Correct(subjStruct(5).Line.oneRel,1);...
    subjStruct(6).Line.Correct(subjStruct(6).Line.oneRel,1);...
    subjStruct(7).Line.Correct(subjStruct(7).Line.oneRel,1);...
    subjStruct(8).Line.Correct(subjStruct(8).Line.oneRel,1);...
    subjStruct(9).Line.Correct(subjStruct(9).Line.oneRel,1);];

outputAccrossSubj.Line.Correct.twoRel = ...
    [subjStruct(1).Line.Correct(subjStruct(1).Line.twoRel,1);...
    subjStruct(2).Line.Correct(subjStruct(2).Line.twoRel,1);...
    subjStruct(3).Line.Correct(subjStruct(3).Line.twoRel,1);...
    subjStruct(4).Line.Correct(subjStruct(4).Line.twoRel,1);...
    subjStruct(5).Line.Correct(subjStruct(5).Line.twoRel,1);...
    subjStruct(6).Line.Correct(subjStruct(6).Line.twoRel,1);...
    subjStruct(7).Line.Correct(subjStruct(7).Line.twoRel,1);...
    subjStruct(8).Line.Correct(subjStruct(8).Line.twoRel,1);...
    subjStruct(9).Line.Correct(subjStruct(9).Line.twoRel,1);];

outputAccrossSubj.Line.Correct.threeRel =...
    [subjStruct(1).Line.Correct(subjStruct(1).Line.threeRel,1);...
    subjStruct(2).Line.Correct(subjStruct(2).Line.threeRel,1);...
    subjStruct(3).Line.Correct(subjStruct(3).Line.threeRel,1);...
    subjStruct(4).Line.Correct(subjStruct(4).Line.threeRel,1);...
    subjStruct(5).Line.Correct(subjStruct(5).Line.threeRel,1);...
    subjStruct(6).Line.Correct(subjStruct(6).Line.threeRel,1);...
    subjStruct(7).Line.Correct(subjStruct(7).Line.threeRel,1);...
    subjStruct(8).Line.Correct(subjStruct(8).Line.threeRel,1);...
    subjStruct(9).Line.Correct(subjStruct(9).Line.threeRel,1);];

outputAccrossSubj.Line.Correct.fourRel =...
    [subjStruct(1).Line.Correct(subjStruct(1).Line.fourRel,1);...
    subjStruct(2).Line.Correct(subjStruct(2).Line.fourRel,1);...
    subjStruct(3).Line.Correct(subjStruct(3).Line.fourRel,1);...
    subjStruct(4).Line.Correct(subjStruct(4).Line.fourRel,1);...
    subjStruct(5).Line.Correct(subjStruct(5).Line.fourRel,1);...
    subjStruct(6).Line.Correct(subjStruct(6).Line.fourRel,1);...
    subjStruct(7).Line.Correct(subjStruct(7).Line.fourRel,1);...
    subjStruct(8).Line.Correct(subjStruct(8).Line.fourRel,1);...
    subjStruct(9).Line.Correct(subjStruct(9).Line.fourRel,1);];

%% H) ADD OUTPUT DATA FOR 'PROPORTION RESPOND CHANGE' GROUPED
% FOR EVERY EXPERIMENTA LEVEL (CONCATINATED INTO SINGLE COLUMNS ACROSS
% SUBJECTS)

%This section performs the same actions as the one above however it adds
%another matrix to the structure for all subjects grouped by reliability
%level to record if they responded that a change had occured or not. 

% ELLIPSE TRIALS

outputAccrossSubj.Ellipse.respProb.zeroRel =...
    [subjStruct(1).Ellipse.resp(subjStruct(1).Ellipse.zeroRel,1);...
    subjStruct(2).Ellipse.resp(subjStruct(2).Ellipse.zeroRel,1);...
    subjStruct(3).Ellipse.resp(subjStruct(3).Ellipse.zeroRel,1);...
    subjStruct(4).Ellipse.resp(subjStruct(4).Ellipse.zeroRel,1);...
    subjStruct(5).Ellipse.resp(subjStruct(5).Ellipse.zeroRel,1);...
    subjStruct(6).Ellipse.resp(subjStruct(6).Ellipse.zeroRel,1);...
    subjStruct(7).Ellipse.resp(subjStruct(7).Ellipse.zeroRel,1);...
    subjStruct(8).Ellipse.resp(subjStruct(8).Ellipse.zeroRel,1);...
    subjStruct(9).Ellipse.resp(subjStruct(9).Ellipse.zeroRel,1);];

outputAccrossSubj.Ellipse.respProb.oneRel =...
    [subjStruct(1).Ellipse.resp(subjStruct(1).Ellipse.oneRel,1);...
    subjStruct(2).Ellipse.resp(subjStruct(2).Ellipse.oneRel,1);...
    subjStruct(3).Ellipse.resp(subjStruct(3).Ellipse.oneRel,1);...
    subjStruct(4).Ellipse.resp(subjStruct(4).Ellipse.oneRel,1);...
    subjStruct(5).Ellipse.resp(subjStruct(5).Ellipse.oneRel,1);...
    subjStruct(6).Ellipse.resp(subjStruct(6).Ellipse.oneRel,1);...
    subjStruct(7).Ellipse.resp(subjStruct(7).Ellipse.oneRel,1);...
    subjStruct(8).Ellipse.resp(subjStruct(8).Ellipse.oneRel,1);...
    subjStruct(9).Ellipse.resp(subjStruct(9).Ellipse.oneRel,1);];

outputAccrossSubj.Ellipse.respProb.twoRel =...
    [subjStruct(1).Ellipse.resp(subjStruct(1).Ellipse.twoRel,1);...
    subjStruct(2).Ellipse.resp(subjStruct(2).Ellipse.twoRel,1);...
    subjStruct(3).Ellipse.resp(subjStruct(3).Ellipse.twoRel,1);...
    subjStruct(4).Ellipse.resp(subjStruct(4).Ellipse.twoRel,1);...
    subjStruct(5).Ellipse.resp(subjStruct(5).Ellipse.twoRel,1);...
    subjStruct(6).Ellipse.resp(subjStruct(6).Ellipse.twoRel,1);...
    subjStruct(7).Ellipse.resp(subjStruct(7).Ellipse.twoRel,1);...
    subjStruct(8).Ellipse.resp(subjStruct(8).Ellipse.twoRel,1);...
    subjStruct(9).Ellipse.resp(subjStruct(9).Ellipse.twoRel,1);];

outputAccrossSubj.Ellipse.respProb.threeRel =...
    [subjStruct(1).Ellipse.resp(subjStruct(1).Ellipse.threeRel,1);...
    subjStruct(2).Ellipse.resp(subjStruct(2).Ellipse.threeRel,1);...
    subjStruct(3).Ellipse.resp(subjStruct(3).Ellipse.threeRel,1);...
    subjStruct(4).Ellipse.resp(subjStruct(4).Ellipse.threeRel,1);...
    subjStruct(5).Ellipse.resp(subjStruct(5).Ellipse.threeRel,1);...
    subjStruct(6).Ellipse.resp(subjStruct(6).Ellipse.threeRel,1);...
    subjStruct(7).Ellipse.resp(subjStruct(7).Ellipse.threeRel,1);...
    subjStruct(8).Ellipse.resp(subjStruct(8).Ellipse.threeRel,1);...
    subjStruct(9).Ellipse.resp(subjStruct(9).Ellipse.threeRel,1);];

outputAccrossSubj.Ellipse.respProb.fourRel =...
    [subjStruct(1).Ellipse.resp(subjStruct(1).Ellipse.fourRel,1);...
    subjStruct(2).Ellipse.resp(subjStruct(2).Ellipse.fourRel,1);...
    subjStruct(3).Ellipse.resp(subjStruct(3).Ellipse.fourRel,1);...
    subjStruct(4).Ellipse.resp(subjStruct(4).Ellipse.fourRel,1);...
    subjStruct(5).Ellipse.resp(subjStruct(5).Ellipse.fourRel,1);...
    subjStruct(6).Ellipse.resp(subjStruct(6).Ellipse.fourRel,1);...
    subjStruct(7).Ellipse.resp(subjStruct(7).Ellipse.fourRel,1);...
    subjStruct(8).Ellipse.resp(subjStruct(8).Ellipse.fourRel,1);...
    subjStruct(9).Ellipse.resp(subjStruct(9).Ellipse.fourRel,1);];

%LINE TRIALS

outputAccrossSubj.Line.respProb.zeroRel =...
    [subjStruct(1).Line.resp(subjStruct(1).Line.zeroRel,1);...
    subjStruct(2).Line.resp(subjStruct(2).Line.zeroRel,1);...
    subjStruct(3).Line.resp(subjStruct(3).Line.zeroRel,1);...
    subjStruct(4).Line.resp(subjStruct(4).Line.zeroRel,1);...
    subjStruct(5).Line.resp(subjStruct(5).Line.zeroRel,1);...
    subjStruct(6).Line.resp(subjStruct(6).Line.zeroRel,1);...
    subjStruct(7).Line.resp(subjStruct(7).Line.zeroRel,1);...
    subjStruct(8).Line.resp(subjStruct(8).Line.zeroRel,1);...
    subjStruct(9).Line.resp(subjStruct(9).Line.zeroRel,1);];

outputAccrossSubj.Line.respProb.oneRel =...
    [subjStruct(1).Line.resp(subjStruct(1).Line.oneRel,1);...
    subjStruct(2).Line.resp(subjStruct(2).Line.oneRel,1);...
    subjStruct(3).Line.resp(subjStruct(3).Line.oneRel,1);...
    subjStruct(4).Line.resp(subjStruct(4).Line.oneRel,1);...
    subjStruct(5).Line.resp(subjStruct(5).Line.oneRel,1);...
    subjStruct(6).Line.resp(subjStruct(6).Line.oneRel,1);...
    subjStruct(7).Line.resp(subjStruct(7).Line.oneRel,1);...
    subjStruct(8).Line.resp(subjStruct(8).Line.oneRel,1);...
    subjStruct(9).Line.resp(subjStruct(9).Line.oneRel,1);];

outputAccrossSubj.Line.respProb.twoRel = ...
    [subjStruct(1).Line.resp(subjStruct(1).Line.twoRel,1);...
    subjStruct(2).Line.resp(subjStruct(2).Line.twoRel,1);...
    subjStruct(3).Line.resp(subjStruct(3).Line.twoRel,1);...
    subjStruct(4).Line.resp(subjStruct(4).Line.twoRel,1);...
    subjStruct(5).Line.resp(subjStruct(5).Line.twoRel,1);...
    subjStruct(6).Line.resp(subjStruct(6).Line.twoRel,1);...
    subjStruct(7).Line.resp(subjStruct(7).Line.twoRel,1);...
    subjStruct(8).Line.resp(subjStruct(8).Line.twoRel,1);...
    subjStruct(9).Line.resp(subjStruct(9).Line.twoRel,1);];

outputAccrossSubj.Line.respProb.threeRel =...
    [subjStruct(1).Line.resp(subjStruct(1).Line.threeRel,1);...
    subjStruct(2).Line.resp(subjStruct(2).Line.threeRel,1);...
    subjStruct(3).Line.resp(subjStruct(3).Line.threeRel,1);...
    subjStruct(4).Line.resp(subjStruct(4).Line.threeRel,1);...
    subjStruct(5).Line.resp(subjStruct(5).Line.threeRel,1);...
    subjStruct(6).Line.resp(subjStruct(6).Line.threeRel,1);...
    subjStruct(7).Line.resp(subjStruct(7).Line.threeRel,1);...
    subjStruct(8).Line.resp(subjStruct(8).Line.threeRel,1);...
    subjStruct(9).Line.resp(subjStruct(9).Line.threeRel,1);];

outputAccrossSubj.Line.respProb.fourRel =...
    [subjStruct(1).Line.resp(subjStruct(1).Line.fourRel,1);...
    subjStruct(2).Line.resp(subjStruct(2).Line.fourRel,1);...
    subjStruct(3).Line.resp(subjStruct(3).Line.fourRel,1);...
    subjStruct(4).Line.resp(subjStruct(4).Line.fourRel,1);...
    subjStruct(5).Line.resp(subjStruct(5).Line.fourRel,1);...
    subjStruct(6).Line.resp(subjStruct(6).Line.fourRel,1);...
    subjStruct(7).Line.resp(subjStruct(7).Line.fourRel,1);...
    subjStruct(8).Line.resp(subjStruct(8).Line.fourRel,1);...
    subjStruct(9).Line.resp(subjStruct(9).Line.fourRel,1);];

%% I) MAKE A MATRIX OF ALL TRIALS COMBINED FOR ALL PARTICIPANTS

% This section adds columns to the 'correct' matrix that state what
% conditon the trial was in (1 = ellipse, 2 = line), and what relaibility
% level the trial was at that time (# narrow ellipses as 0,1,2,3,or 4)
% There are 2000 trials per participant per condition, this leads to 4000
% per participant for a total of 36,000 trials. 

for ii = 1:totalSubj
subjStruct(ii).Ellipse.Correct = double(subjStruct(ii).Ellipse.Correct)
subjStruct(ii).Line.Correct = double(subjStruct(ii).Line.Correct)
end

for ii = 1:totalSubj
    %ELLIPSE TRIALS
    subjStruct(ii).Ellipse.Correct(:,2) = 1
    subjStruct(ii).Ellipse.Correct(subjStruct(ii).Ellipse.zeroRel,3) = 0;
    subjStruct(ii).Ellipse.Correct(subjStruct(ii).Ellipse.oneRel,3) = 1;
    subjStruct(ii).Ellipse.Correct(subjStruct(ii).Ellipse.twoRel,3) = 2;
    subjStruct(ii).Ellipse.Correct(subjStruct(ii).Ellipse.threeRel,3) = 3;
    subjStruct(ii).Ellipse.Correct(subjStruct(ii).Ellipse.fourRel,3) = 4;
    
    %LINE TRIALS
    subjStruct(ii).Line.Correct(:,2) = 2
    subjStruct(ii).Line.Correct(subjStruct(ii).Line.zeroRel,3) = 0;
    subjStruct(ii).Line.Correct(subjStruct(ii).Line.oneRel,3) = 1;
    subjStruct(ii).Line.Correct(subjStruct(ii).Line.twoRel,3) = 2;
    subjStruct(ii).Line.Correct(subjStruct(ii).Line.threeRel,3) = 3;
    subjStruct(ii).Line.Correct(subjStruct(ii).Line.fourRel,3) = 4;
    
end
outputAccrossSubj.Ellipse.AllRel = [subjStruct(1).Ellipse.Correct;...
    subjStruct(2).Ellipse.Correct; subjStruct(3).Ellipse.Correct;...
    subjStruct(4).Ellipse.Correct; subjStruct(5).Ellipse.Correct;...
    subjStruct(6).Ellipse.Correct; subjStruct(7).Ellipse.Correct;...
    subjStruct(8).Ellipse.Correct; subjStruct(9).Ellipse.Correct;];

outputAccrossSubj.Line.AllRel = [subjStruct(1).Line.Correct;...
    subjStruct(2).Line.Correct; subjStruct(3).Line.Correct;...
    subjStruct(4).Line.Correct; subjStruct(5).Line.Correct;...
    subjStruct(6).Line.Correct; subjStruct(7).Line.Correct;...
    subjStruct(8).Line.Correct; subjStruct(9).Line.Correct;];


%% J) SAVE STRUCTURE OUTPUTS 

%These are the structures that will be pulled by the calculations script. 

save('allParticipantData','subjStruct')
save('outputAcrossAprticipants', 'outputAccrossSubj')
