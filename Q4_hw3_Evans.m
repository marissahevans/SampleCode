%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%% MATHTOOLS HOMEWORK 3 - MARISSA EVANS - mhe229@nyu.edu %%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% QUESTION 4

% Date intialized: Oct. 15th 2019
% Written by: Marissa Evans

%Start with a fresh work space
clear all 
close all
clc

%% Deconvolution of the Hemodynamic Response. 
% Neuronal activity causes local changes in
% deoxyhemoglobin concentration in the blood, which can be measured using 
% magnetic resonance imaging (MRI). One drawback of this is that the hemodynamic response 
% is both delayed and slower than the underlying neural responses. We can model the delay and spread
% of the measurements relative to the neural signals using a linear shift-invariant system:
% [SEE ORIGINAL PROMPT FOR EQUATION]
% where x(n) is an input signal delivered over time (for example, a sequence of light intensities),
% h(k) is the hemodynamic response to a single light flash at time k = 0 (i.e., the impulse
% response of the MRI measurement), and r(n) is the MRI response to the full input signal.
% In the file hrfDeconv.mat, you will find a response vector r and an input vector x containing
% a sequence of impulses (indicating flashes of light). Your goal is to estimate the HRF, h,
% from the data. Each of these signals are sampled at 1 Hz. Plot vectors r and x versus time to
% get a sense for the data. (Use the stem command for x, and label the x-axis).

load('hrfDeconv.mat')


figure
stem(x, 'Linewidth',1)
hold on
plot(r,'Linewidth', 2)
xlabel('Time (s)')
ylabel('Amplitude')
title('Inpulse Rate and fMRI Response')
legend('Impulse Rate', 'fMRI Response', 'Location', 'bestoutside')
box off
set(gca, 'TickDir', 'out')


%% PART A

%%
%* Convolution is linear, and thus we can re-write the equation above as a 
% matrix multiplication, r = Xh, where h is a vector of length M, and X is an N + M - 1 × M matrix
% (N is the length of the input x). Write a matlab function createConvMat, that takes as
% arguments an input vector x and M (the dimensionality of h) and generates a matrix X
% such that the response r = Xh is as defined in Eq. (1) for any h. Verify that the matrix
% generated by your function produces the same response as MatLab's conv function
% when applied to a few random h vectors of length M = 15. Visualize the matrix X as
% an image (evaluate imagesc(X)), and describe its structure.

% Decide the length of vector h (can be any length you want). Using 20 as
% test sample here, 
sampleH = randn(20,1);
M = length(sampleH);

%Use function to create matrix X
X = createConvMat(x,M);

%Verfiying that matrix X works for any h (using length 15 as propmted)
hMat = randn(15,5);
X = createConvMat(x,length(hMat));

for ii = 1:5
    %Test using matrix X
    test1 = X*hMat(:,ii);
    
    %Test using MatLab conv
    test2 = conv(x,hMat(:,ii));
    
    %Santity check to see if the same
    testSan(:,ii) = test1 == test2;
end

%All comparisons are equal as shown by sanity check matrix
disp('All outcomes are equivolent with conv and Matrix X')
disp(testSan)

%Visualaization of Matrix X
figure
imagesc(X)
title('Visualization of Matrix X')
box off
set(gca, 'TickDir', 'out')

%The matrix has a diagonal shape with padding visible at the bottom left
%and top right. This is a 'full' convolution because the full input is
%never trimmed with additional padding added to extend on both ends when needed.



%% PART B

%%
%* Now, given the X generated by your function for M = 15, solve for h by formulating a
% least-squares regression problem: [SEE ORIGINAL PROMPT FOR EQUATION]
% Plot h-opt as a function of time (label your x-axis, including units). How would you
% describe it? How long does it last?

[U S V] = svd(X);

%Calculate the inverse of S
Sinv = S;
for ii = 1:15
Sinv(ii,ii) = 1/S(ii,ii);
end

hOpt = V*Sinv'*U'*r;

timeH = 0:length(hOpt)-1;

figure
plot(timeH,hOpt, 'Linewidth', 2)
title('Canonical HRF')
xlabel('time (s)')
ylabel('BOLD')
yline(0, '--', 'Linewidth', 2);
title('Optimal Hemodynamic Response')
box off
set(gca, 'TickDir', 'out')

%The hemodynmic response peaks at 4 seconds after the stimulus onset then
%after 8 seconds drops into a refractory period before returning to it's
%resting state. The whole signal change seems to last just under 14
%seconds. 


%% PART C

%%
%*  It's often easier to understand an LSI system by viewing it in the frequency domain.
% Plot the power-spectrum of the HRF (i.e. |F(h)|^2, where F(h) is the Fourier transform
% of the HRF). Plot this with the zero frequency (DC) in the middle, and label the x axis,
% in Hz. Based on this plot, what kind of filter is the HRF? Specifically, which frequencies
% does it allow to pass, and which does it block?

Fh = fft(hOpt);
powerFh = (abs(Fh)).^2;

lenWave = length(hOpt);                         
fShift = linspace(-lenWave/2,lenWave/2,15);
yShift = fftshift(powerFh);

figure
stem(fShift,yShift, 'Linewidth',1)
ylabel('Power')
xlabel('Frequency (Hz)')
title('Power Spectrum of HRF')
box off
set(gca, 'TickDir', 'out')

% By looking at the plot this is a low pass filter, it lets frequencies 
% under 2Hz pass while restraining any higher frequencies. 